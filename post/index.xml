<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on liming.pub</title>
    <link>https://liming.pub/post/</link>
    <description>Recent content in Posts on liming.pub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 02 Feb 2022 12:49:54 +0800</lastBuildDate>
    
	<atom:link href="https://liming.pub/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Two Years Blank</title>
      <link>https://liming.pub/post/two-years-blank/</link>
      <pubDate>Wed, 02 Feb 2022 12:49:54 +0800</pubDate>
      
      <guid>https://liming.pub/post/two-years-blank/</guid>
      <description>&lt;p&gt;今天大年初二，新冠病毒还没消停，总感觉希望貌似就在前方，然后就坚持着，不知不觉两年就这样过去了，这期间博客表面看起来没有更新，其实也有写几十篇草稿，但都没有发出来而已，完美追求者的通病：宁缺毋滥。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>5i.Work</title>
      <link>https://liming.pub/post/5i-work/</link>
      <pubDate>Sat, 25 Jan 2020 18:28:16 +0800</pubDate>
      
      <guid>https://liming.pub/post/5i-work/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;大年初一，阴雨绵绵，新冠病毒肆虐，宅家里刷手机都快精神崩溃，于是关掉手机，打开电脑，折腾了一下午，准备正式启用 &lt;a href=&#34;https://5i.work&#34;&gt;5i.work&lt;/a&gt;。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>奔跑吧，2020</title>
      <link>https://liming.pub/post/keep-running-2020/</link>
      <pubDate>Wed, 01 Jan 2020 16:20:38 +0800</pubDate>
      
      <guid>https://liming.pub/post/keep-running-2020/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;2020年元旦放假一天，天气晴好，在阳台懒懒晒太阳，去年元旦开启这个博客，转眼一年过去，对比去年元旦的状态，以及对自我管理的创新，这一年来不但没成长，而且是严重的倒退，不过沉下心来想想，也是有个值得提炼的实践，那就是跑步。在那段魔鬼般加班的岁月，拖着病恹恹的躯体，凌晨1点下班，早上6点还能起来跑步，迎着朝阳，跑过小桥流水，跑过山野绿林，跑步才是真爱。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>使用Gitflow Maven Plugin进行版本发布</title>
      <link>https://liming.pub/post/gitflow-maven-plugin/</link>
      <pubDate>Sat, 28 Dec 2019 09:32:19 +0800</pubDate>
      
      <guid>https://liming.pub/post/gitflow-maven-plugin/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;我们日常开发中更多的是采用 Gitflow开发流程，&lt;a href=&#34;../maven-release-plugin/&#34;&gt;release插件&lt;/a&gt; 对于多分支的支持不怎么好，本文仅针对 &lt;a href=&#34;../git-branch-develop-specification/&#34;&gt;gitflow开发流程&lt;/a&gt;，使用gitflow-maven-plugin插件并进行定制配置。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>使用Maven Release Plugin进行版本发布</title>
      <link>https://liming.pub/post/maven-release-plugin/</link>
      <pubDate>Sun, 15 Dec 2019 21:36:55 +0800</pubDate>
      
      <guid>https://liming.pub/post/maven-release-plugin/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;当工程上线时，需要发布正式版本，如果是多模块结构，如果一个个工程手工去修改，费时费力，本文主要介绍如何使用maven-release-plugin插件，结合git进行版本发布。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>npm私有仓库权限设置</title>
      <link>https://liming.pub/post/nexus-npm-permission/</link>
      <pubDate>Sat, 20 Jul 2019 07:57:43 +0800</pubDate>
      
      <guid>https://liming.pub/post/nexus-npm-permission/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;nexus支持npm仓库，可以设置Proxy代理仓库、Hosted自建仓库和Group聚合仓库，以满足前端日常开发和发布需要。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>AsciiDoctor高阶定制</title>
      <link>https://liming.pub/post/asciidoctor-customization/</link>
      <pubDate>Sat, 13 Jul 2019 08:39:51 +0800</pubDate>
      
      <guid>https://liming.pub/post/asciidoctor-customization/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;前段时间将写作工具全面切换asciidoc后，对asciidoctor也有了进一步定制的要求，仔细看了下官方文档后，一般的定制他已经考虑到了，可以通过配置或者命令行灵活简单的完成，对于复杂一点定制或改造，由于他是开源的，所以也非常容易。下面是自己积累的一些笔记，供大家参考。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Linux脚本监控</title>
      <link>https://liming.pub/post/linux-monitor-shell/</link>
      <pubDate>Sat, 06 Jul 2019 08:07:15 +0800</pubDate>
      
      <guid>https://liming.pub/post/linux-monitor-shell/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;服务器监控有专业的程序，比如springboot-admin。其实可以手工利用shell配合crond搭建一个轻量级的监控系统，云服务器不便宜，将内存和cpu还给应用系统，低碳运维从我走起。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Linux发送邮件</title>
      <link>https://liming.pub/post/linux-email-service/</link>
      <pubDate>Sun, 30 Jun 2019 11:45:39 +0800</pubDate>
      
      <guid>https://liming.pub/post/linux-email-service/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;说起发送邮件，我们第一反应就是写代码实现一个，其实在linux里面，无需借助java、c等重型编程语言就能轻松实现发送邮件的需求，下面介绍两种发邮件方法：&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>rsync实践</title>
      <link>https://liming.pub/post/rsync/</link>
      <pubDate>Sun, 23 Jun 2019 14:48:56 +0800</pubDate>
      
      <guid>https://liming.pub/post/rsync/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;rsync（remote synchronize）是一个开源的跨操作系统的数据同步工具，可应用于 LAN/WAN/本地 等各种场景下的快速同步文件。rsync有三种工作模式：本地模式、通道模式、服务模式。本文只是通道模式下结合异机之间的同步备份的场景进行简单实践。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Samba实践</title>
      <link>https://liming.pub/post/samba/</link>
      <pubDate>Sat, 22 Jun 2019 09:42:35 +0800</pubDate>
      
      <guid>https://liming.pub/post/samba/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Samba是SMB/CIFS网络协议的重新实现, 可以在跨平台系统间进行文件共享，适用于局域网内数据共享、以及分布式文件系统中的数据一致，Samba的搭建和维护是运维人员的必备技能。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Docker私有仓库权限设置</title>
      <link>https://liming.pub/post/nexus-docker-permission/</link>
      <pubDate>Sat, 15 Jun 2019 10:01:11 +0800</pubDate>
      
      <guid>https://liming.pub/post/nexus-docker-permission/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;基于nexus，可以做到docker的仓库隔离和权限控制，本文假设有两类仓库需求：&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;合作伙伴共享仓库（权限：半公开）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公司自有仓库（权限：私有）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Nexus安装和配置</title>
      <link>https://liming.pub/post/nexus-settings/</link>
      <pubDate>Sun, 09 Jun 2019 22:22:50 +0800</pubDate>
      
      <guid>https://liming.pub/post/nexus-settings/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Nexus在手，私有仓库全都有，目前行业里常用的仓库neuxs3基本都已支持，可以说只需要搭建一个nexus，就能解决了开发过程中涉及到的所有私有仓库或镜像需求。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>SSH实用技巧</title>
      <link>https://liming.pub/post/ssh-practical-skills/</link>
      <pubDate>Sun, 09 Jun 2019 08:29:20 +0800</pubDate>
      
      <guid>https://liming.pub/post/ssh-practical-skills/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ssh和基于ssh的命令（如scp）等是运维人员和服务器打交道的通道，当服务器数量较多，要记住那么多的服务器ip和密码也是非常困难的事情。其实有很多技巧和配置可以让ssh跟ls一样简单。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Git分支策略及开发流程规范</title>
      <link>https://liming.pub/post/git-branch-develop-specification/</link>
      <pubDate>Sun, 02 Jun 2019 11:35:02 +0800</pubDate>
      
      <guid>https://liming.pub/post/git-branch-develop-specification/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git常见的三种协作开发模式：Git Flow &amp;amp; GitHub Flow &amp;amp; Gitlab Flow，本文只是对上述几种模式进行吸收融合，结合项目实战总结出的比较实用的分支写作规范。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>分布式会话</title>
      <link>https://liming.pub/post/distributed-session/</link>
      <pubDate>Sun, 26 May 2019 15:02:11 +0800</pubDate>
      
      <guid>https://liming.pub/post/distributed-session/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;本文作为 &lt;a href=&#34;https://liming.pub/post/jwt/&#34;&gt;JWT无会话&lt;/a&gt; 的姊妹篇，重点介绍微服务中另一种会话解决方案：分布式会话。
分布式会话底层采用Redis，使用无感，即在开发中和使用普通的HTTP Session一样，无需任何额外代码。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>RESTful资源定义规范及实践</title>
      <link>https://liming.pub/post/restful-resource-specification/</link>
      <pubDate>Sun, 12 May 2019 16:07:30 +0800</pubDate>
      
      <guid>https://liming.pub/post/restful-resource-specification/</guid>
      <description>&lt;p&gt;面试了N多的程序员，知道PUT的都寥寥无几，更别说HTTP状态码了，也对接过国内各大厂的API，竟没一家是遵守RESTful的！所以想要真正推行RESTful规范，那是真的困难重重，不光要培训和训练那些写API的程序员，还要跟合作方各种说服和引导。所以一直酝酿着想写个RESTful这个主题，但是由于自己在实践过程中，总是不断冒出新的问题，新的认识，所以一直不忍下手。刚过五一的这个大周末，闲在家没出门，写不了RESTful这个主题，整理一下RESTful资源这块的实践经验我觉得还是够格的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>从java语言到Go语言</title>
      <link>https://liming.pub/post/from-java-to-golang/</link>
      <pubDate>Sat, 27 Apr 2019 10:03:40 +0800</pubDate>
      
      <guid>https://liming.pub/post/from-java-to-golang/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;java做为大型企业应用的主力开发语言，一直有着任何语言都无法匹敌的优势。但是java虽好，就是太重了，不适合小规模、小场景、小工具的开发，一直架构、开发、运维、运营一线全栈发展的，必须要有一个更加趁手的、轻量小巧、快速高效的开发语言，先后用shell、python等脚本语言写了各种小工具，总感觉气味不对。于是最近抽时间接触了下号称是21世纪编程语言的golang，感觉非常妙，golang的设计目标和思路均是我目前为止最满意的，入坑不会后悔。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>用Asciidoc来写作</title>
      <link>https://liming.pub/post/hugo-with-asciidoc/</link>
      <pubDate>Sun, 21 Apr 2019 21:11:07 +0800</pubDate>
      
      <guid>https://liming.pub/post/hugo-with-asciidoc/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Markdown语法过于简单，规范不够标准，经常要花很多时间去适配不同工具，别的语言是熟能生巧，这个语言是越用越怀疑，这对于事事都想精细化控制的我来说是不可接受的。最近通过各种对比和实践，尝试了Asciidoc后，就彻底迷上了，现在日常文档已经基本切换到Asciidoc了，本文则是第一篇Asciidoc格式的文章，自然是贡献给Asciidoc这个主题了。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Docker介绍</title>
      <link>https://liming.pub/post/docker-introduction/</link>
      <pubDate>Sun, 14 Apr 2019 18:56:40 +0800</pubDate>
      
      <guid>https://liming.pub/post/docker-introduction/</guid>
      <description>&lt;p&gt;现如今，Docker已经是开发和运维的必备神器，本文以开发者视角简单介绍一下Docker的基本概念。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据库设计规范</title>
      <link>https://liming.pub/post/database-design-specification/</link>
      <pubDate>Sun, 31 Mar 2019 10:27:07 +0800</pubDate>
      
      <guid>https://liming.pub/post/database-design-specification/</guid>
      <description>&lt;p&gt;当我们使用数据库模型驱动开发时，数据库规范的重要性不言而喻，本文是在日常项目中总结的数据库设计规范，当然这些仅适用于新研项目，对于有历史负债的公司和系统慎用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>前端框架选型</title>
      <link>https://liming.pub/post/front-end-framework/</link>
      <pubDate>Sun, 24 Mar 2019 21:19:38 +0800</pubDate>
      
      <guid>https://liming.pub/post/front-end-framework/</guid>
      <description>&lt;p&gt;前端技术经过近几年快速发展，语言标准、技术框架已经趋于成熟稳定，目前主流的开发框架为：React， Angular ，Vue。相对于后端Spring一统天下，前端三框架并驾齐驱的现状则让前端选择综合征者头痛不已。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx使用经验及常用配置</title>
      <link>https://liming.pub/post/nginx-experience-and-configuration/</link>
      <pubDate>Sat, 09 Mar 2019 21:59:50 +0800</pubDate>
      
      <guid>https://liming.pub/post/nginx-experience-and-configuration/</guid>
      <description>&lt;p&gt;自从10年前接触nginx后，就对它爱不释手，最近两年运维实战也是大量使用，下面就nginx的一些使用经验和常用配置进行一下总结：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Certbot-Auto生成免费的通配符SSl证书</title>
      <link>https://liming.pub/post/certbot-auto-ssl-certificate/</link>
      <pubDate>Sun, 24 Feb 2019 10:12:20 +0800</pubDate>
      
      <guid>https://liming.pub/post/certbot-auto-ssl-certificate/</guid>
      <description>&lt;p&gt;随着谷歌浏览器对非https网站醒目警示不安全后，https就成为网站的一个标配，但是现在一个ssl证书动辄几千元一年，对于创业公司也是一笔不小的费用。如果你喜欢自己动手，那么可以了解一下Let&amp;rsquo;s Encrypt项目，定期自己生成免费的SSL证书。
因为Let&amp;rsquo;s Encrypt证书有效期只有3个月，所以建议自动化，比如本文使用certbot-auto脚本。&lt;br /&gt;
证书分两种：一种是单域名证书，一种是通配符证书，其中单域名证书比较简单，也能自动化续期，本文主要针对通配符证书的生成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Maven私有仓库权限设置</title>
      <link>https://liming.pub/post/nexus-maven-permission/</link>
      <pubDate>Sat, 23 Feb 2019 11:47:45 +0800</pubDate>
      
      <guid>https://liming.pub/post/nexus-maven-permission/</guid>
      <description>&lt;p&gt;基于nexus3，可以做到maven仓库隔离和权限控制，配合maven工程脚手架可以实现仓库的灵活控制，本文假设maven仓库有如下需求：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;同步中央仓库（权限：公开）&lt;/li&gt;
&lt;li&gt;合作伙伴共享仓库（权限：半公开）&lt;/li&gt;
&lt;li&gt;公司自有仓库（权限：私有）&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>mac使用技巧及常用设置</title>
      <link>https://liming.pub/post/mac-practical-settings/</link>
      <pubDate>Sun, 17 Feb 2019 18:17:15 +0800</pubDate>
      
      <guid>https://liming.pub/post/mac-practical-settings/</guid>
      <description>&lt;p&gt;做为mac深度用户，越来越享受在Mac下高效工作，这里整理了一些我在日常中使用的设置和技巧，即作为备忘，也做为分享。当然，效率的提升没有终点，本文会持续更新：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shell中用$表达式截取和替换字符串</title>
      <link>https://liming.pub/post/shell-substring-removal/</link>
      <pubDate>Sun, 17 Feb 2019 10:54:58 +0800</pubDate>
      
      <guid>https://liming.pub/post/shell-substring-removal/</guid>
      <description>&lt;p&gt;说道截取字符串，我们常常会想到cut\awk等工具，其实shell自身截取字符串命令也很强大，下面以变量字符串&lt;code&gt;url=https://liming.pub/post/shell-substring-removal/index.html&lt;/code&gt;为例介绍几种字符串截取和替换方法：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微服务架构实践</title>
      <link>https://liming.pub/post/micro-service/</link>
      <pubDate>Sat, 09 Feb 2019 15:42:15 +0800</pubDate>
      
      <guid>https://liming.pub/post/micro-service/</guid>
      <description>&lt;p&gt;微服务架构就是把大的复杂系统拆分为若干个小的独立的服务， 每个服务运行在自己的进程中，并采用轻量级的机制进行通信（一般是 HTTP 资源 API），通过全自动部署工具来实现独立部署。这些服务都是围绕业务能力来构建，可以使用不同的编程语言和不同的数据存储技术，并保持最小化集中管理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JAMStack</title>
      <link>https://liming.pub/post/jamstack/</link>
      <pubDate>Sun, 27 Jan 2019 19:53:39 +0800</pubDate>
      
      <guid>https://liming.pub/post/jamstack/</guid>
      <description>&lt;p&gt;随着我们的架构越来越复杂，技术越来越牛掰，效果越来越酷炫，我们每个人都在不停的学习，以至于我们都忘了技术存在的意义。蓦然回首，其实我们的需求真的很简单，简单到我们完全可以无视市面上大部分技术，解放程序员，让我们一起JAMStack吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git实用配置和技巧</title>
      <link>https://liming.pub/post/git-practical-skills/</link>
      <pubDate>Sat, 26 Jan 2019 10:10:46 +0800</pubDate>
      
      <guid>https://liming.pub/post/git-practical-skills/</guid>
      <description>&lt;p&gt;git命令博大精深，做为git深度用户，这里介绍几个自己一直在用的自认为很实用的git的配置和技巧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Restful缓存实践</title>
      <link>https://liming.pub/post/restful-cache/</link>
      <pubDate>Sun, 20 Jan 2019 21:30:43 +0800</pubDate>
      
      <guid>https://liming.pub/post/restful-cache/</guid>
      <description>&lt;p&gt;应用可以通过分布式集群等方式动态扩容，但数据库不行，一个系统的吞吐量最终取决于数据库，而缓存可以在应用和数据库之间起到一层保护，为了竟可能多的提高缓存命中率，降低数据库压力，做到及时性和性能的平衡，根据不同缓存特点和应用场景采用多级缓存，具体如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JWT最佳实践</title>
      <link>https://liming.pub/post/jwt/</link>
      <pubDate>Sat, 19 Jan 2019 22:33:53 +0800</pubDate>
      
      <guid>https://liming.pub/post/jwt/</guid>
      <description>&lt;p&gt;在单服务型应用时代，扩容时必须配备F5这样的硬件设备来解决session会话保持的问题；在微服务开始流行时，spring也给出了Spring Session这样的分布式共享会话方案；在Restful和前后端分离架构下，JWT才是正道。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux文件时间</title>
      <link>https://liming.pub/post/linux-file-time/</link>
      <pubDate>Sun, 06 Jan 2019 22:14:22 +0800</pubDate>
      
      <guid>https://liming.pub/post/linux-file-time/</guid>
      <description>&lt;p&gt;写了个脚本把之前三年的晨间日记转为hugo格式，其中最核心的处理就是生成日记时间，由于linux下没有创建时间，只有最后修改时间，为了把日记所属日期准确找出来，认真研究了下linux里的三个时间。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自我管理实践：晨间日记&#43;生理周期&#43;天气预报&#43;坚持打卡&#43;倒数提醒</title>
      <link>https://liming.pub/post/morning-diary-with-hugo/</link>
      <pubDate>Tue, 01 Jan 2019 19:33:20 +0800</pubDate>
      
      <guid>https://liming.pub/post/morning-diary-with-hugo/</guid>
      <description>&lt;p&gt;趁着这个元旦假期在家“陪”爸妈和娃（其实是爸妈在看电视，娃在玩积木，我在敲代码），用python和shell升级了晨间日记的新写法：
&amp;gt;&amp;gt;每天早上起床后打开电脑，在命令行里敲下&lt;code&gt;md&lt;/code&gt;，程序自动从网上抓取近十天的天气预报，自动计算近十天的生理周期指数（身体、智力、情绪、直觉）显示在命令行里，大眼一扫后按回车键，程序自动按照晨间日记的模板（模板包含当天天气，当天生理指数信息，重要日期倒数日，坚持项目坚持天数，以及距出生共过了多少天等等）生成按yyyy/mm/dd-title.md的文件并以&lt;code&gt;vim&lt;/code&gt;方式打开进行编辑，完成后直接使用hugo本地打开进行预览，还可以点击日期tag或者星期tag查看上月今日、去年今年以及上周今日等的日记进行回顾。&lt;/p&gt;

&lt;p&gt;下面我简单罗列一下实现思路。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>API错误码规范</title>
      <link>https://liming.pub/post/api-problem-json/</link>
      <pubDate>Mon, 31 Dec 2018 11:05:49 +0800</pubDate>
      
      <guid>https://liming.pub/post/api-problem-json/</guid>
      <description>&lt;p&gt;做了这么多年项目，倾听了太多开发人员对API接口返回错误码的吐槽，收到了太多用户对系统中云里雾里错误信息的埋怨。我在这几年实践中尝试过一些的解决方案，今天就做一下总结。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>重拾码字的快乐</title>
      <link>https://liming.pub/post/start-writing-again/</link>
      <pubDate>Sun, 30 Dec 2018 18:31:13 +0800</pubDate>
      
      <guid>https://liming.pub/post/start-writing-again/</guid>
      <description>&lt;p&gt;前几天，一个同事问我要博客地址，不经意间一问，却深深的触动了我。&lt;/p&gt;

&lt;p&gt;博客我曾经有过，而且还不少，但真正投入大量精力的有两个，一个是05年开的好网博客，另一个是08年自己改程序购买主机搭建的阿明在线独立博客，大概是12年左右吧，两个博客先后都关闭了。现在唯一还在坚持的就只有QQ空间，虽然写的越来越少，至少每年元旦都会有做一下年终总结，并立一下当年flag，但这个唯一的QQ空间现在也已经设置为只有自己可见。&lt;/p&gt;

&lt;p&gt;所以现在自己还真的没有博客！而且这么多年都没有码字，表达能力已经严重退化，满脑子想说的感慨，却半天蹦不出一个词儿。&lt;/p&gt;

&lt;p&gt;于是趁着元旦放假，酝酿着重拾博客，经过调研，最终按如下方案开始了我的开篇博客：&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>